[workspace]
members = [
  ".",
  "cli",
]

[package]
name = "bpflint"
version = "0.1.1"
authors = ["Daniel Mueller <deso@posteo.net>"]
edition = "2024"
license = "MIT"
repository = "https://github.com/d-e-s-o/bpflint"
readme = "README.md"
documentation = "https://docs.rs/bpflint"
categories = [
  "accessibility",
  "command-line-utilities",
  "compilers",
  "development-tools",
  "parser-implementations",
]
keywords = ["bpf", "linter", "lint", "cli"]
description = """
Linting functionality for BPF C programs.
"""

[lib]
crate-type = ["cdylib", "rlib"]

[features]
# Enable development-style debug logging infrastructure for WASM
# contexts (currently has no meaning on other targets).
debug = ["web-sys"]
# We misuse a feature here to actually prepare the WASM part of the
# project. Ideally we could use something along the lines of a
# post-build stage, but discussions surrounding that feature are still
# ongoing (https://github.com/rust-lang/cargo/issues/545).
deploy = []

[build-dependencies]
anyhow = "1.0"
wasm-bindgen-cli-support = { version = "0.2", default-features = false }

[target.'cfg(target_arch = "wasm32")'.build-dependencies]
wasm-bindgen-cli-support = { version = "0.2", default-features = false }

[dependencies]
anyhow = "1.0"
tracing = { version = "0.1", default-features = false, features = ["std"] }
tree-sitter-bpf-c = "0.2.1"
web-sys = { version = "0.3", features = ['console'], optional = true }

[dev-dependencies]
bpflint = { path = ".", features = ["debug"] }
indoc = "2.0"
pretty_assertions = "1.4"

[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
tree-sitter = "0.25"

[target.'cfg(target_arch = "wasm32")'.dependencies]
tree-sitter = { package = "tree-sitter-c2rust", version = "0.25" }
wasm-bindgen = "0.2"

[lints]
workspace = true

[workspace.lints.rust]
deprecated-safe = "warn"
future-incompatible = "warn"
keyword-idents = "warn"
let-underscore = "warn"
missing-debug-implementations = "warn"
missing-docs = "warn"
trivial-numeric-casts = "warn"
unsafe-op-in-unsafe-fn = "warn"
unused = "warn"

[workspace.lints.clippy]
collapsible-else-if = "allow"
collapsible-if = "allow"
let-and-return = "allow"
let-unit-value = "allow"
module-inception = "allow"
type-complexity = "allow"
absolute-paths = "warn"
allow-attributes = "warn"
clone-on-ref-ptr = "warn"
dbg-macro = "warn"
derive-partial-eq-without-eq = "warn"
doc-markdown = "warn"
join-absolute-paths = "warn"
large-enum-variant = "warn"
redundant-closure-for-method-calls = "warn"
unchecked-duration-subtraction = "warn"
uninlined-format-args = "warn"
wildcard-imports = "warn"
